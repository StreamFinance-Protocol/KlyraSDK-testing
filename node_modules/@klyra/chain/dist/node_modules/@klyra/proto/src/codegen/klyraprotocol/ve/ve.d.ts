import * as _m0 from "protobufjs/minimal";
import { DeepPartial } from "../../helpers";
/** PricePair defines a pair of prices for a market. */
export interface PricePair {
    marketId: number;
    /** Plain oracle price (used for funding rates) */
    spotPrice: Uint8Array;
    /** Funding rate weighted price (used for pnl and liquidations) */
    pnlPrice: Uint8Array;
}
/** PricePair defines a pair of prices for a market. */
export interface PricePairSDKType {
    market_id: number;
    spot_price: Uint8Array;
    pnl_price: Uint8Array;
}
/** Daemon VoteExtension defines the vote extension structure for daemon prices. */
export interface DaemonVoteExtension {
    /** Prices defines a map of marketId -> PricePair. */
    prices: PricePair[];
    /** sDaiConversionRate defines the conversion rate for sDAI. */
    sDaiConversionRate: string;
}
/** Daemon VoteExtension defines the vote extension structure for daemon prices. */
export interface DaemonVoteExtensionSDKType {
    prices: PricePairSDKType[];
    s_dai_conversion_rate: string;
}
export declare const PricePair: {
    encode(message: PricePair, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PricePair;
    fromPartial(object: DeepPartial<PricePair>): PricePair;
};
export declare const DaemonVoteExtension: {
    encode(message: DaemonVoteExtension, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DaemonVoteExtension;
    fromPartial(object: DeepPartial<DaemonVoteExtension>): DaemonVoteExtension;
};
