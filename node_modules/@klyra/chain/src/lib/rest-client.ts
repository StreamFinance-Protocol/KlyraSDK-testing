import axios from "axios";
import { DEFAULT_API_TIMEOUT } from "../constants";
import { generateQueryPath } from "../utils/request";

export default class RestClient {
  readonly host: string;
  readonly apiTimeout: number;

  constructor(host: string, apiTimeout?: number | null) {
    if (host.endsWith("/")) {
      this.host = host.slice(0, -1);
    } else {
      this.host = host;
    }
    this.apiTimeout = apiTimeout ?? DEFAULT_API_TIMEOUT;
  }

  // TODO: create custom axios instance for better customization+
  async get<T = unknown>(
    requestPath: string,
    params: Record<string, unknown> = {}
  ): Promise<T> {
    const url = `${this.host}${generateQueryPath(requestPath, params)}`;
    const response = await axios.get(url);
    return response.data as T;
  }

  async post<T = unknown>(
    requestPath: string,
    params: Record<string, unknown> = {},
    body?: unknown,
    headers: Record<string, unknown> = {}
  ): Promise<T> {
    const url = `${this.host}${generateQueryPath(requestPath, params)}`;
    return axios.post(url, body, headers);
  }
}
