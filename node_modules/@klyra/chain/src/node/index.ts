import { Tendermint37Client } from "@cosmjs/tendermint-rpc";
import { QueryClient, setupTxExtension } from "@cosmjs/stargate";
import { type NodeClientConfig } from "../types";
import { TendermintClient } from "../lib/tendermint";
import { DEFAULT_BROADCAST_OPTIONS } from "../constants";
import NodeGet from "./node-get";
import NodePost from "./node-post";

export default class NodeClient {
  private readonly config: NodeClientConfig;
  private _get?: NodeGet;
  private _post?: NodePost;

  constructor(config: NodeClientConfig) {
    this.config = config;
  }

  async initialize(): Promise<void> {
    const tendermint37Client = await Tendermint37Client.connect(
      this.config.restUrl
    );
    const broadcastOptions = {
      pollIntervalMs:
        this.config.broadcastOptions?.pollIntervalMs ??
        DEFAULT_BROADCAST_OPTIONS.pollIntervalMs,
      timeoutMs:
        this.config.broadcastOptions?.timeoutMs ??
        DEFAULT_BROADCAST_OPTIONS.timeoutMs,
    };

    const tendermintClient = new TendermintClient(
      tendermint37Client,
      broadcastOptions
    );

    const queryClient = QueryClient.withExtensions(
      tendermint37Client,
      setupTxExtension
    );

    this._get = new NodeGet(tendermintClient, queryClient);
    this._post = new NodePost(
      this._get,
      this.config.chainId,
      this.config.defaultClientMemo,
      this.config.useTimestampNonce
    );
  }

  get get(): NodeGet {
    if (!this._get) {
      throw new Error("Get module not initialized in NodeClient.");
    }
    return this._get;
  }

  get post(): NodePost {
    if (!this._post) {
      throw new Error("Post module not initialized in NodeClient.");
    }
    return this._post;
  }

  /**
   * @description populate account number cache in the Post module for performance.
   */
  async populateAccountNumberCache(address: string): Promise<void> {
    if (!this._post) {
      throw new Error("Post module not initialized in NodeClient.");
    }
    await this._post.populateAccountNumberCache(address);
  }
}
