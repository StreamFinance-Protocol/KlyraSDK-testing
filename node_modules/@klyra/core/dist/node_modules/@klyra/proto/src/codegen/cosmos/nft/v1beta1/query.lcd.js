"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LCDQueryClient = void 0;
const helpers_1 = require("../../../helpers");
class LCDQueryClient {
    constructor({ requestClient }) {
        this.req = requestClient;
        this.balance = this.balance.bind(this);
        this.owner = this.owner.bind(this);
        this.supply = this.supply.bind(this);
        this.nFTs = this.nFTs.bind(this);
        this.nFT = this.nFT.bind(this);
        this.class = this.class.bind(this);
        this.classes = this.classes.bind(this);
    }
    /* Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721 */
    async balance(params) {
        const endpoint = `cosmos/nft/v1beta1/balance/${params.owner}/${params.classId}`;
        return await this.req.get(endpoint);
    }
    /* Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721 */
    async owner(params) {
        const endpoint = `cosmos/nft/v1beta1/owner/${params.classId}/${params.id}`;
        return await this.req.get(endpoint);
    }
    /* Supply queries the number of NFTs from the given class, same as totalSupply of ERC721. */
    async supply(params) {
        const endpoint = `cosmos/nft/v1beta1/supply/${params.classId}`;
        return await this.req.get(endpoint);
    }
    /* NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in
     ERC721Enumerable */
    async nFTs(params) {
        const options = {
            params: {}
        };
        if (typeof (params === null || params === void 0 ? void 0 : params.classId) !== "undefined") {
            options.params.class_id = params.classId;
        }
        if (typeof (params === null || params === void 0 ? void 0 : params.owner) !== "undefined") {
            options.params.owner = params.owner;
        }
        if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== "undefined") {
            (0, helpers_1.setPaginationParams)(options, params.pagination);
        }
        const endpoint = `cosmos/nft/v1beta1/nfts`;
        return await this.req.get(endpoint, options);
    }
    /* NFT queries an NFT based on its class and id. */
    async nFT(params) {
        const endpoint = `cosmos/nft/v1beta1/nfts/${params.classId}/${params.id}`;
        return await this.req.get(endpoint);
    }
    /* Class queries an NFT class based on its id */
    async class(params) {
        const endpoint = `cosmos/nft/v1beta1/classes/${params.classId}`;
        return await this.req.get(endpoint);
    }
    /* Classes queries all NFT classes */
    async classes(params = {
        pagination: undefined
    }) {
        const options = {
            params: {}
        };
        if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== "undefined") {
            (0, helpers_1.setPaginationParams)(options, params.pagination);
        }
        const endpoint = `cosmos/nft/v1beta1/classes`;
        return await this.req.get(endpoint, options);
    }
}
exports.LCDQueryClient = LCDQueryClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkubGNkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BrbHlyYS9wcm90by9zcmMvY29kZWdlbi9jb3Ntb3MvbmZ0L3YxYmV0YTEvcXVlcnkubGNkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQUF1RDtBQUd2RCxNQUFhLGNBQWM7SUFHekIsWUFBWSxFQUNWLGFBQWEsRUFHZDtRQUNDLElBQUksQ0FBQyxHQUFHLEdBQUcsYUFBYSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUNELHlHQUF5RztJQUd6RyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQTJCO1FBQ3ZDLE1BQU0sUUFBUSxHQUFHLDhCQUE4QixNQUFNLENBQUMsS0FBSyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FB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