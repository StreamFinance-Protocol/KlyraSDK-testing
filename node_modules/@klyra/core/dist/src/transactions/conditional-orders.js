"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.internalPlaceTakeProfitLimitOrderWithCortex = internalPlaceTakeProfitLimitOrderWithCortex;
exports.internalPlaceTakeProfitLimitOrder = internalPlaceTakeProfitLimitOrder;
exports.internalPlaceTakeProfitMarketOrderWithCortex = internalPlaceTakeProfitMarketOrderWithCortex;
exports.internalPlaceTakeProfitMarketOrder = internalPlaceTakeProfitMarketOrder;
exports.internalPlaceStopLossLimitOrderWithCortex = internalPlaceStopLossLimitOrderWithCortex;
exports.internalPlaceStopLossLimitOrder = internalPlaceStopLossLimitOrder;
exports.internalPlaceStopLossMarketOrderWithCortex = internalPlaceStopLossMarketOrderWithCortex;
exports.internalPlaceStopLossMarketOrder = internalPlaceStopLossMarketOrder;
const shared_1 = require("@klyra/shared");
const utils_1 = require("./utils");
async function internalPlaceTakeProfitLimitOrderWithCortex(chainClient, tradeInputs, subaccount, routerFeePpm, routerSubaccount) {
    var _a, _b;
    const inputs = tradeInputs;
    return chainClient.placeOrder(subaccount, inputs.marketId, shared_1.OrderType.TAKE_PROFIT_LIMIT, inputs.side, inputs.price, inputs.quoteSize, (0, utils_1.getRandomClientId)(), (_a = inputs.timeInForce) !== null && _a !== void 0 ? _a : shared_1.OrderTimeInForce.GTT, inputs.goodTilTime, routerFeePpm, routerSubaccount, (_b = inputs.execution) !== null && _b !== void 0 ? _b : shared_1.OrderExecution.DEFAULT, false, inputs.reduceOnly, inputs.triggerPrice, undefined, undefined, undefined, undefined);
}
async function internalPlaceTakeProfitLimitOrder(chainClient, subaccount, ticker, side, price, triggerPrice, size, goodTilBlockTime, reduceOnly, clientId, routerFeePpm, routerSubaccount, memo) {
    return await chainClient.placeOrder(subaccount, ticker, shared_1.OrderType.TAKE_PROFIT_LIMIT, side, price, size, clientId !== null && clientId !== void 0 ? clientId : (0, utils_1.getRandomClientId)(), shared_1.OrderTimeInForce.GTT, goodTilBlockTime, routerFeePpm, routerSubaccount, shared_1.OrderExecution.DEFAULT, false, reduceOnly, triggerPrice, undefined, undefined, undefined, memo);
}
async function internalPlaceTakeProfitMarketOrderWithCortex(chainClient, tradeInputs, subaccount, routerFeePpm, routerSubaccount) {
    var _a, _b;
    const inputs = tradeInputs;
    return chainClient.placeOrder(subaccount, inputs.marketId, shared_1.OrderType.TAKE_PROFIT_MARKET, inputs.side, 0, inputs.quoteSize, (0, utils_1.getRandomClientId)(), (_a = inputs.timeInForce) !== null && _a !== void 0 ? _a : shared_1.OrderTimeInForce.GTT, inputs.goodTilTime, routerFeePpm, routerSubaccount, (_b = inputs.execution) !== null && _b !== void 0 ? _b : shared_1.OrderExecution.IOC, false, inputs.reduceOnly, inputs.triggerPrice, undefined, undefined, undefined, undefined);
}
async function internalPlaceTakeProfitMarketOrder(chainClient, subaccount, ticker, side, price, triggerPrice, size, goodTilBlockTime, reduceOnly, clientId, routerFeePpm, routerSubaccount, memo) {
    return await chainClient.placeOrder(subaccount, ticker, shared_1.OrderType.TAKE_PROFIT_MARKET, side, price, size, clientId !== null && clientId !== void 0 ? clientId : (0, utils_1.getRandomClientId)(), shared_1.OrderTimeInForce.GTT, goodTilBlockTime, routerFeePpm, routerSubaccount, shared_1.OrderExecution.IOC, false, reduceOnly, triggerPrice, undefined, undefined, undefined, memo);
}
async function internalPlaceStopLossLimitOrderWithCortex(chainClient, tradeInputs, subaccount, routerFeePpm, routerSubaccount) {
    var _a, _b;
    const inputs = tradeInputs;
    return chainClient.placeOrder(subaccount, inputs.marketId, shared_1.OrderType.STOP_LIMIT, inputs.side, inputs.price, inputs.quoteSize, (0, utils_1.getRandomClientId)(), (_a = inputs.timeInForce) !== null && _a !== void 0 ? _a : shared_1.OrderTimeInForce.GTT, inputs.goodTilTime, routerFeePpm, routerSubaccount, (_b = inputs.execution) !== null && _b !== void 0 ? _b : shared_1.OrderExecution.DEFAULT, false, inputs.reduceOnly, inputs.triggerPrice, undefined, undefined, undefined, undefined);
}
async function internalPlaceStopLossLimitOrder(chainClient, subaccount, ticker, side, price, triggerPrice, size, goodTilBlockTime, reduceOnly, clientId, routerFeePpm, routerSubaccount, memo) {
    return await chainClient.placeOrder(subaccount, ticker, shared_1.OrderType.STOP_LIMIT, side, price, size, clientId !== null && clientId !== void 0 ? clientId : (0, utils_1.getRandomClientId)(), shared_1.OrderTimeInForce.GTT, goodTilBlockTime, routerFeePpm, routerSubaccount, shared_1.OrderExecution.DEFAULT, false, reduceOnly, triggerPrice, undefined, undefined, undefined, memo);
}
async function internalPlaceStopLossMarketOrderWithCortex(chainClient, tradeInputs, subaccount, routerFeePpm, routerSubaccount) {
    var _a, _b;
    const inputs = tradeInputs;
    return chainClient.placeOrder(subaccount, inputs.marketId, shared_1.OrderType.STOP_MARKET, inputs.side, 0, inputs.quoteSize, (0, utils_1.getRandomClientId)(), (_a = inputs.timeInForce) !== null && _a !== void 0 ? _a : shared_1.OrderTimeInForce.GTT, inputs.goodTilTime, routerFeePpm, routerSubaccount, (_b = inputs.execution) !== null && _b !== void 0 ? _b : shared_1.OrderExecution.IOC, false, inputs.reduceOnly, inputs.triggerPrice, undefined, undefined, undefined, undefined);
}
async function internalPlaceStopLossMarketOrder(chainClient, subaccount, ticker, side, price, triggerPrice, size, goodTilBlockTime, reduceOnly, clientId, routerFeePpm, routerSubaccount, memo) {
    return await chainClient.placeOrder(subaccount, ticker, shared_1.OrderType.STOP_MARKET, side, price, size, clientId !== null && clientId !== void 0 ? clientId : (0, utils_1.getRandomClientId)(), shared_1.OrderTimeInForce.GTT, goodTilBlockTime, routerFeePpm, routerSubaccount, shared_1.OrderExecution.IOC, false, reduceOnly, triggerPrice, undefined, undefined, undefined, memo);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZGl0aW9uYWwtb3JkZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RyYW5zYWN0aW9ucy9jb25kaXRpb25hbC1vcmRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFxQkEsa0dBNkJDO0FBRUQsOEVBb0NDO0FBRUQsb0dBNkJDO0FBRUQsZ0ZBb0NDO0FBRUQsOEZBNkJDO0FBRUQsMEVBb0NDO0FBRUQsZ0dBNkJDO0FBRUQsNEVBb0NDO0FBMVJELDBDQUt1QjtBQUN2QixtQ0FBNEM7QUFFckMsS0FBSyxVQUFVLDJDQUEyQyxDQUMvRCxXQUF3QixFQUN4QixXQUFpQyxFQUNqQyxVQUFnQyxFQUNoQyxZQUFxQixFQUNyQixnQkFBaUM7O0lBRWpDLE1BQU0sTUFBTSxHQUFHLFdBQXlDLENBQUM7SUFDekQsT0FBTyxXQUFXLENBQUMsVUFBVSxDQUMzQixVQUFVLEVBQ1YsTUFBTSxDQUFDLFFBQVEsRUFDZixrQkFBUyxDQUFDLGlCQUFpQixFQUMzQixNQUFNLENBQUMsSUFBSSxFQUNYLE1BQU0sQ0FBQyxLQUFLLEVBQ1osTUFBTSxDQUFDLFNBQVMsRUFDaEIsSUFBQSx5QkFBaUIsR0FBRSxFQUNuQixNQUFBLE1BQU0sQ0FBQyxXQUFXLG1DQUFJLHlCQUFnQixDQUFDLEdBQUcsRUFDMUMsTUFBTSxDQUFDLFdBQVcsRUFDbEIsWUFBWSxFQUNaLGdCQUFnQixFQUNoQixNQUFBLE1BQU0sQ0FBQyxTQUFTLG1DQUFJLHVCQUFjLENBQUMsT0FBTyxFQUMxQyxLQUFLLEVBQ0wsTUFBTSxDQUFDLFVBQVUsRUFDakIsTUFBTSxDQUFDLFlBQVksRUFDbkIsU0FBUyxFQUNULFNBQVMsRUFDVCxTQUFTLEVBQ1QsU0FBUyxDQUNWLENBQUM7QUFDSixDQUFDO0FBRU0sS0FBSyxVQUFVLGlDQUFpQyxDQUNyRCxXQUF3QixFQUN4QixVQUFnQyxFQUNoQyxNQUFjLEVBQ2QsSUFBZSxFQUNmLEtBQWEsRUFDYixZQUFvQixFQUNwQixJ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