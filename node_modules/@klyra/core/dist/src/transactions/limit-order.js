"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.internalPlaceLimitOrderWithCortex = internalPlaceLimitOrderWithCortex;
exports.internalPlaceLimitOrder = internalPlaceLimitOrder;
exports.hasReceivedNecessaryLimitOrderArgs = hasReceivedNecessaryLimitOrderArgs;
const shared_1 = require("@klyra/shared");
const utils_1 = require("./utils");
const field_validations_1 = require("./field-validations");
async function internalPlaceLimitOrderWithCortex(chainClient, tradeInputs, subaccount, routerFeePpm, routerSubaccount) {
    var _a, _b;
    const inputs = tradeInputs;
    return chainClient.placeOrder(subaccount, inputs.marketId, shared_1.OrderType.LIMIT, inputs.side, inputs.price, inputs.quoteSize, (0, utils_1.getRandomClientId)(), (_a = inputs.timeInForce) !== null && _a !== void 0 ? _a : shared_1.OrderTimeInForce.GTT, inputs.goodTilTime, routerFeePpm, routerSubaccount, (_b = inputs.execution) !== null && _b !== void 0 ? _b : shared_1.OrderExecution.DEFAULT, false, inputs.reduceOnly, undefined, undefined, undefined, undefined, undefined);
}
async function internalPlaceLimitOrder(chainClient, subaccount, ticker, side, price, size, goodTilBlockTime, reduceOnly, clientId, routerFeePpm, routerSubaccount, memo) {
    return await chainClient.placeOrder(subaccount, ticker, shared_1.OrderType.LIMIT, side, price, size, clientId !== null && clientId !== void 0 ? clientId : (0, utils_1.getRandomClientId)(), shared_1.OrderTimeInForce.GTT, goodTilBlockTime, routerFeePpm, routerSubaccount, shared_1.OrderExecution.DEFAULT, false, reduceOnly, undefined, undefined, undefined, undefined, memo);
}
function hasReceivedNecessaryLimitOrderArgs(isUsingCortexForms, subaccount, ticker, side, price, size, goodTilBlockTime, reduceOnly) {
    return (0, field_validations_1.validateFields)({
        subaccount,
        ticker,
        side,
        price,
        size,
        goodTilTime: goodTilBlockTime,
        reduceOnly,
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGltaXQtb3JkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdHJhbnNhY3Rpb25zL2xpbWl0LW9yZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBbUJBLDhFQTZCQztBQUVELDBEQW1DQztBQUVELGdGQW1CQztBQWhHRCwwQ0FLdUI7QUFDdkIsbUNBQTRDO0FBQzVDLDJEQUFxRDtBQUU5QyxLQUFLLFVBQVUsaUNBQWlDLENBQ3JELFdBQXdCLEVBQ3hCLFdBQWlDLEVBQ2pDLFVBQWdDLEVBQ2hDLFlBQXFCLEVBQ3JCLGdCQUFpQzs7SUFFakMsTUFBTSxNQUFNLEdBQUcsV0FBbUMsQ0FBQztJQUNuRCxPQUFPLFdBQVcsQ0FBQyxVQUFVLENBQzNCLFVBQVUsRUFDVixNQUFNLENBQUMsUUFBUSxFQUNmLGtCQUFTLENBQUMsS0FBSyxFQUNmLE1BQU0sQ0FBQyxJQUFJLEVBQ1gsTUFBTSxDQUFDLEtBQUssRUFDWixNQUFNLENBQUMsU0FBUyxFQUNoQixJQUFBLHlCQUFpQixHQUFFLEVBQ25CLE1BQUEsTUFBTSxDQUFDLFdBQVcsbUNBQUkseUJBQWdCLENBQUMsR0FBRyxFQUMxQyxNQUFNLENBQUMsV0FBVyxFQUNsQixZQUFZLEVBQ1osZ0JBQWdCLEVBQ2hCLE1BQUEsTUFBTSxDQUFDLFNBQVMsbUNBQUksdUJBQWMsQ0FBQyxPQUFPLEVBQzFDLEtBQUssRUFDTCxNQUFNLENBQUMsVUFBVSxFQUNqQixTQUFTLEVBQ1QsU0FBUyxFQUNULFNBQVMsRUFDVCxTQUFTLEVBQ1QsU0FBUyxDQUNWLENBQUM7QUFDSixDQUFDO0FBRU0sS0FBSyxVQUFVLHVCQUF1QixDQUMzQyxXQUF3QixFQUN4QixVQUFnQyxFQUNoQyxNQUFjLEVBQ2QsSUFBZSxFQUNmLEtBQWEsRUFDYixJQUFZLEVBQ1osZ0JBQXdCLEVBQ3hCLFVBQW1CLEVBQ25CLFFBQWlCLEVBQ2pCLFlBQXFCLEVBQ3JCLGdCQUFpQyxFQUNqQyxJQUFhO0lBRWIsT0FBTyxNQUFNLFdBQVcsQ0FBQyxVQUFVLENBQ2pDLFVBQVUsRUFDVixNQUFNLEVBQ04sa0JBQVMsQ0FBQyxLQUFLLEVBQ2YsSUFBSSxFQUNKLEtBQUssRUFDTCxJQUFJLEVBQ0osUUFBUSxhQUFSLFFBQVEsY0FBUixRQUFRLEdBQUksSUFBQSx5QkFBaUIsR0FBRSxFQUMvQix5QkFBZ0IsQ0FBQyxHQUFHLEVBQ3BCLGdCQUFnQixFQUNoQixZQUFZLEVBQ1osZ0JBQWdCLEVBQ2hCLHVCQUFjLENBQUMsT0FBTyxFQUN0QixLQUFLLEVBQ0wsVUFBVSxFQUNWLFNBQVMsRUFDVCxTQUFTLEVBQ1QsU0FBUyxFQUNULFNBQVMsRUFDVCxJQUFJLENBQ0wsQ0FBQztBQUNKLENBQUM7QUFFRCxTQUFnQixrQ0FBa0MsQ0FDaEQsa0JBQTJCLEVBQzNCLFVBQWlDLEVBQ2pDLE1BQWUsRUFDZixJQUFnQixFQUNoQixLQUFjLEVBQ2QsSUFBYSxFQUNiLGdCQUF5QixFQUN6QixVQUFvQjtJQUVwQixPQUFPLElBQUEsa0NBQWMsRUFBQztRQUNwQixVQUFVO1FBQ1YsTUFBTTtRQUNOLElBQUk7UUFDSixLQUFLO1FBQ0wsSUFBSTtRQUNKLFdBQVcsRUFBRSxnQkFBZ0I7UUFDN0IsVUFBVTtLQUNYLENBQUMsQ0FBQztBQUNMLENBQUMifQ==