import { type IndexerSubaccountAssetPosition } from "@klyra/shared";
import { type Store } from "../../core/store";
import { type AssetPosition } from "../../types/accounts";
import { transform } from "../../utils/merge";

export class AssetPositionsProcessor {
  private store: Store;

  constructor(store: Store) {
    this.store = store;
  }

  public process(
    payload: IndexerSubaccountAssetPosition[] | null
  ): AssetPosition[] | null {
    if (!payload) return null;

    const result = payload.map(this.processAssetPosition.bind(this));
    return result;
  }

  private processAssetPosition(
    assetPosition: IndexerSubaccountAssetPosition
  ): AssetPosition {
    return transform<AssetPosition>(undefined, assetPosition, {
      string: {
        symbol: "id",
        assetId: "assetId",
      },
      number: {
        size: "size",
      },
    });
  }
}
