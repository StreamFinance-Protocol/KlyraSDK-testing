import { describe, expect, it, beforeAll } from "@jest/globals";
import { Store } from "../core/store";
import { TradesProcessor } from "../processors/trades.processor";
import { TradesMocks } from "./mocks";

describe("TradesProcessor", () => {
  let store: Store;
  let tradesProcessor: TradesProcessor;

  beforeAll(() => {
    store = new Store();
    tradesProcessor = new TradesProcessor(store);
  });

  it("should be defined", () => {
    expect(TradesProcessor).toBeDefined();
  });

  it("should process trades", () => {
    tradesProcessor.processSubscribed(TradesMocks.SUBSCRIBED_MESSAGE);

    const trades = store.getState().trades;
    const marketTrades = trades["ETH-USD"];
    expect(marketTrades).toBeDefined();
    expect(marketTrades?.length).toBe(10);
    expect(marketTrades?.[0]?.id).toBe("014a8f900000000200000014");
    expect(marketTrades?.[0]?.side).toBe("BUY");
    expect(marketTrades?.[0]?.size).toBe(0.002);
    expect(marketTrades?.[0]?.price).toBe(2632.6);
  });

  it("should process batch update", () => {
    const previousTrades = store.getState().trades;
    const previousMarketTrades = previousTrades["ETH-USD"];
    expect(previousMarketTrades).toBeDefined();
    expect(previousMarketTrades?.length).toBe(10);

    tradesProcessor.processBatchUpdate(TradesMocks.BATCH_UPDATE_MESSAGE);

    const trades = store.getState().trades;
    const marketTrades = trades["ETH-USD"];
    expect(marketTrades).toBeDefined();
    expect(marketTrades?.length).toBe(11);
    expect(marketTrades?.[10]?.id).toBe("014a968f0000000200000005");
    expect(marketTrades?.[10]?.side).toBe("BUY");
    expect(marketTrades?.[10]?.size).toBe(0.002);
    expect(marketTrades?.[10]?.price).toBe(2634.1);
  });
});
