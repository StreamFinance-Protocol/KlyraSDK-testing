"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateTradeForm = exports.tradeFormSchemas = void 0;
const zod_1 = require("zod");
const shared_1 = require("@klyra/shared");
const forms_1 = require("../types/forms");
const accounts_1 = require("../types/accounts");
const tradeFormBaseSchema = zod_1.z.object({
    type: zod_1.z.nativeEnum(forms_1.TradeFormType),
    marketId: zod_1.z.string().min(1, "Market ID is required"),
    side: zod_1.z.nativeEnum(shared_1.OrderSide),
    baseSize: zod_1.z.number().min(0, "Base size must be greater than 0"),
    quoteSize: zod_1.z.number().min(0, "Quote size must be greater than 0"),
    marginMode: zod_1.z.nativeEnum(accounts_1.MarginMode),
});
const marketTradeFormSchema = tradeFormBaseSchema.extend({
    type: zod_1.z.literal(forms_1.TradeFormType.MARKET),
});
const limitTradeFormSchema = tradeFormBaseSchema.extend({
    type: zod_1.z.literal(forms_1.TradeFormType.LIMIT),
    price: zod_1.z.number().min(0, "Price must be greater than 0"),
});
const stopLimitTradeFormSchema = tradeFormBaseSchema.extend({
    type: zod_1.z.literal(forms_1.TradeFormType.STOP_LIMIT),
    price: zod_1.z.number().min(0, "Price must be greater than 0"),
    triggerPrice: zod_1.z.number().min(0, "Trigger price must be greater than 0"),
});
const takeProfitLimitTradeFormSchema = tradeFormBaseSchema.extend({
    type: zod_1.z.literal(forms_1.TradeFormType.TAKE_PROFIT_LIMIT),
    price: zod_1.z.number().min(0, "Price must be greater than 0"),
    triggerPrice: zod_1.z.number().min(0, "Trigger price must be greater than 0"),
});
const stopMarketTradeFormSchema = tradeFormBaseSchema.extend({
    type: zod_1.z.literal(forms_1.TradeFormType.STOP_MARKET),
    triggerPrice: zod_1.z.number().min(0, "Trigger price must be greater than 0"),
});
const takeProfitMarketTradeFormSchema = tradeFormBaseSchema.extend({
    type: zod_1.z.literal(forms_1.TradeFormType.TAKE_PROFIT_MARKET),
    triggerPrice: zod_1.z.number().min(0, "Trigger price must be greater than 0"),
});
exports.tradeFormSchemas = {
    [forms_1.TradeFormType.MARKET]: marketTradeFormSchema,
    [forms_1.TradeFormType.LIMIT]: limitTradeFormSchema,
    [forms_1.TradeFormType.STOP_LIMIT]: stopLimitTradeFormSchema,
    [forms_1.TradeFormType.TAKE_PROFIT_LIMIT]: takeProfitLimitTradeFormSchema,
    [forms_1.TradeFormType.STOP_MARKET]: stopMarketTradeFormSchema,
    [forms_1.TradeFormType.TAKE_PROFIT_MARKET]: takeProfitMarketTradeFormSchema,
};
const validateTradeForm = (form) => {
    const schema = exports.tradeFormSchemas[form.type];
    return schema.safeParse(form);
};
exports.validateTradeForm = validateTradeForm;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhZGUtZm9ybXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NoZW1hcy90cmFkZS1mb3Jtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2QkFBd0I7QUFDeEIsMENBQTBDO0FBQzFDLDBDQUFxRTtBQUNyRSxnREFBK0M7QUFFL0MsTUFBTSxtQkFBbUIsR0FBRyxPQUFDLENBQUMsTUFBTSxDQUFDO0lBQ25DLElBQUksRUFBRSxPQUFDLENBQUMsVUFBVSxDQUFDLHFCQUFhLENBQUM7SUFDakMsUUFBUSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLHVCQUF1QixDQUFDO0lBQ3BELElBQUksRUFBRSxPQUFDLENBQUMsVUFBVSxDQUFDLGtCQUFTLENBQUM7SUFDN0IsUUFBUSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLGtDQUFrQyxDQUFDO0lBQy9ELFNBQVMsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxtQ0FBbUMsQ0FBQztJQUNqRSxVQUFVLEVBQUUsT0FBQyxDQUFDLFVBQVUsQ0FBQyxxQkFBVSxDQUFDO0NBQ3JDLENBQUMsQ0FBQztBQUVILE1BQU0scUJBQXFCLEdBQUcsbUJBQW1CLENBQUMsTUFBTSxDQUFDO0lBQ3ZELElBQUksRUFBRSxPQUFDLENBQUMsT0FBTyxDQUFDLHFCQUFhLENBQUMsTUFBTSxDQUFDO0NBQ3RDLENBQUMsQ0FBQztBQUVILE1BQU0sb0JBQW9CLEdBQUcsbUJBQW1CLENBQUMsTUFBTSxDQUFDO0lBQ3RELElBQUksRUFBRSxPQUFDLENBQUMsT0FBTyxDQUFDLHFCQUFhLENBQUMsS0FBSyxDQUFDO0lBQ3BDLEtBQUssRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSw4QkFBOEIsQ0FBQztDQUN6RCxDQUFDLENBQUM7QUFFSCxNQUFNLHdCQUF3QixHQUFHLG1CQUFtQixDQUFDLE1BQU0sQ0FBQztJQUMxRCxJQUFJLEVBQUUsT0FBQyxDQUFDLE9BQU8sQ0FBQyxxQkFBYSxDQUFDLFVBQVUsQ0FBQztJQUN6QyxLQUFLLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsOEJBQThCLENBQUM7SUFDeEQsWUFBWSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLHNDQUFzQyxDQUFDO0NBQ3hFLENBQUMsQ0FBQztBQUVILE1BQU0sOEJBQThCLEdBQUcsbUJBQW1CLENBQUMsTUFBTSxDQUFDO0lBQ2hFLElBQUksRUFBRSxPQUFDLENBQUMsT0FBTyxDQUFDLHFCQUFhLENBQUMsaUJBQWlCLENBQUM7SUFDaEQsS0FBSyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLDhCQUE4QixDQUFDO0lBQ3hELFlBQVksRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxzQ0FBc0MsQ0FBQztDQUN4RSxDQUFDLENBQUM7QUFFSCxNQUFNLHlCQUF5QixHQUFHLG1CQUFtQixDQUFDLE1BQU0sQ0FBQztJQUMzRCxJQUFJLEVBQUUsT0FBQyxDQUFDLE9BQU8sQ0FBQyxxQkFBYSxDQUFDLFdBQVcsQ0FBQztJQUMxQyxZQUFZLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsc0NBQXNDLENBQUM7Q0FDeEUsQ0FBQyxDQUFDO0FBRUgsTUFBTSwrQkFBK0IsR0FBRyxtQkFBbUIsQ0FBQyxNQUFNLENBQUM7SUFDakUsSUFBSSxFQUFFLE9BQUMsQ0FBQyxPQUFPLENBQUMscUJBQWEsQ0FBQyxrQkFBa0IsQ0FBQztJQUNqRCxZQUFZLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsc0NBQXNDLENBQUM7Q0FDeEUsQ0FBQyxDQUFDO0FBRVUsUUFBQSxnQkFBZ0IsR0FBRztJQUM5QixDQUFDLHFCQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUscUJBQXFCO0lBQzdDLENBQUMscUJBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRSxvQkFBb0I7SUFDM0MsQ0FBQyxxQkFBYSxDQUFDLFVBQVUsQ0FBQyxFQUFFLHdCQUF3QjtJQUNwRCxDQUFDLHFCQUFhLENBQUMsaUJBQWlCLENBQUMsRUFBRSw4QkFBOEI7SUFDakUsQ0FBQyxxQkFBYSxDQUFDLFdBQVcsQ0FBQyxFQUFFLHlCQUF5QjtJQUN0RCxDQUFDLHFCQUFhLENBQUMsa0JBQWtCLENBQUMsRUFBRSwrQkFBK0I7Q0FDcEUsQ0FBQztBQUVLLE1BQU0saUJBQWlCLEdBQUcsQ0FDL0IsSUFBcUIsRUFDNEIsRUFBRTtJQUNuRCxNQUFNLE1BQU0sR0FBRyx3QkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0MsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2hDLENBQUMsQ0FBQztBQUxXLFFBQUEsaUJBQWlCLHFCQUs1QiJ9