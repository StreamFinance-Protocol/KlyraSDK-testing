import { z } from "zod";
import { OrderSide } from "@klyra/shared";
import { type TradeFormInputs, TradeFormType } from "../types/forms";
import { MarginMode } from "../types/accounts";
export declare const tradeFormSchemas: {
    MARKET: z.ZodObject<z.objectUtil.extendShape<{
        type: z.ZodNativeEnum<typeof TradeFormType>;
        marketId: z.ZodString;
        side: z.ZodNativeEnum<typeof OrderSide>;
        baseSize: z.ZodNumber;
        quoteSize: z.ZodNumber;
        marginMode: z.ZodNativeEnum<typeof MarginMode>;
    }, {
        type: z.ZodLiteral<TradeFormType.MARKET>;
    }>, "strip", z.ZodTypeAny, {
        type: TradeFormType.MARKET;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
    }, {
        type: TradeFormType.MARKET;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
    }>;
    LIMIT: z.ZodObject<z.objectUtil.extendShape<{
        type: z.ZodNativeEnum<typeof TradeFormType>;
        marketId: z.ZodString;
        side: z.ZodNativeEnum<typeof OrderSide>;
        baseSize: z.ZodNumber;
        quoteSize: z.ZodNumber;
        marginMode: z.ZodNativeEnum<typeof MarginMode>;
    }, {
        type: z.ZodLiteral<TradeFormType.LIMIT>;
        price: z.ZodNumber;
    }>, "strip", z.ZodTypeAny, {
        type: TradeFormType.LIMIT;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        price: number;
    }, {
        type: TradeFormType.LIMIT;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        price: number;
    }>;
    STOP_LIMIT: z.ZodObject<z.objectUtil.extendShape<{
        type: z.ZodNativeEnum<typeof TradeFormType>;
        marketId: z.ZodString;
        side: z.ZodNativeEnum<typeof OrderSide>;
        baseSize: z.ZodNumber;
        quoteSize: z.ZodNumber;
        marginMode: z.ZodNativeEnum<typeof MarginMode>;
    }, {
        type: z.ZodLiteral<TradeFormType.STOP_LIMIT>;
        price: z.ZodNumber;
        triggerPrice: z.ZodNumber;
    }>, "strip", z.ZodTypeAny, {
        type: TradeFormType.STOP_LIMIT;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        price: number;
        triggerPrice: number;
    }, {
        type: TradeFormType.STOP_LIMIT;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        price: number;
        triggerPrice: number;
    }>;
    TAKE_PROFIT_LIMIT: z.ZodObject<z.objectUtil.extendShape<{
        type: z.ZodNativeEnum<typeof TradeFormType>;
        marketId: z.ZodString;
        side: z.ZodNativeEnum<typeof OrderSide>;
        baseSize: z.ZodNumber;
        quoteSize: z.ZodNumber;
        marginMode: z.ZodNativeEnum<typeof MarginMode>;
    }, {
        type: z.ZodLiteral<TradeFormType.TAKE_PROFIT_LIMIT>;
        price: z.ZodNumber;
        triggerPrice: z.ZodNumber;
    }>, "strip", z.ZodTypeAny, {
        type: TradeFormType.TAKE_PROFIT_LIMIT;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        price: number;
        triggerPrice: number;
    }, {
        type: TradeFormType.TAKE_PROFIT_LIMIT;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        price: number;
        triggerPrice: number;
    }>;
    STOP_MARKET: z.ZodObject<z.objectUtil.extendShape<{
        type: z.ZodNativeEnum<typeof TradeFormType>;
        marketId: z.ZodString;
        side: z.ZodNativeEnum<typeof OrderSide>;
        baseSize: z.ZodNumber;
        quoteSize: z.ZodNumber;
        marginMode: z.ZodNativeEnum<typeof MarginMode>;
    }, {
        type: z.ZodLiteral<TradeFormType.STOP_MARKET>;
        triggerPrice: z.ZodNumber;
    }>, "strip", z.ZodTypeAny, {
        type: TradeFormType.STOP_MARKET;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        triggerPrice: number;
    }, {
        type: TradeFormType.STOP_MARKET;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        triggerPrice: number;
    }>;
    TAKE_PROFIT_MARKET: z.ZodObject<z.objectUtil.extendShape<{
        type: z.ZodNativeEnum<typeof TradeFormType>;
        marketId: z.ZodString;
        side: z.ZodNativeEnum<typeof OrderSide>;
        baseSize: z.ZodNumber;
        quoteSize: z.ZodNumber;
        marginMode: z.ZodNativeEnum<typeof MarginMode>;
    }, {
        type: z.ZodLiteral<TradeFormType.TAKE_PROFIT_MARKET>;
        triggerPrice: z.ZodNumber;
    }>, "strip", z.ZodTypeAny, {
        type: TradeFormType.TAKE_PROFIT_MARKET;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        triggerPrice: number;
    }, {
        type: TradeFormType.TAKE_PROFIT_MARKET;
        marketId: string;
        side: OrderSide;
        marginMode: MarginMode;
        baseSize: number;
        quoteSize: number;
        triggerPrice: number;
    }>;
};
export declare const validateTradeForm: (form: TradeFormInputs) => z.SafeParseReturnType<unknown, TradeFormInputs>;
