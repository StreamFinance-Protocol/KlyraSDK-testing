"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertIndexerOrderType = convertIndexerOrderType;
exports.convertIndexerLiquidity = convertIndexerLiquidity;
exports.convertIndexerOrderStatus = convertIndexerOrderStatus;
exports.convertIndexerTimeInForce = convertIndexerTimeInForce;
exports.convertIndexerOrderSide = convertIndexerOrderSide;
exports.convertIndexerPositionSide = convertIndexerPositionSide;
exports.getMarginModeFromSubaccount = getMarginModeFromSubaccount;
const shared_1 = require("@klyra/shared");
const shared_2 = require("@klyra/shared");
const accounts_1 = require("../types/accounts");
const order_status_1 = require("./order-status");
function convertIndexerOrderType(type) {
    // TODO: check if the order types are correct
    switch (type) {
        case shared_1.IndexerFillType.LIMIT:
            return shared_1.OrderType.LIMIT;
        case shared_1.IndexerFillType.LIQUIDATED:
            return shared_1.OrderType.LIQUIDATED;
        case shared_1.IndexerFillType.LIQUIDATION:
            return shared_1.OrderType.LIQUIDATION;
        default:
            return shared_1.OrderType.LIMIT;
    }
}
function convertIndexerLiquidity(liquidity) {
    if (liquidity === shared_1.IndexerLiquidity.MAKER) {
        return accounts_1.FillLiquidity.MAKER;
    }
    return accounts_1.FillLiquidity.TAKER;
}
function convertIndexerOrderStatus(status) {
    if (status === shared_1.IndexerOrderStatus.BEST_EFFORT_OPENED) {
        return (0, order_status_1.getOrderStatusFromEnum)(shared_1.OrderStatusEnum.PENDING);
    }
    const value = status;
    return (0, order_status_1.getOrderStatusFromEnum)(value);
}
function convertIndexerTimeInForce(timeInForce) {
    if (timeInForce === shared_1.IndexerTimeInForce.GTT) {
        return shared_1.OrderTimeInForce.GTT;
    }
    if (timeInForce === shared_1.IndexerTimeInForce.IOC) {
        return shared_1.OrderTimeInForce.IOC;
    }
    return null;
}
function convertIndexerOrderSide(side) {
    return side === shared_1.IndexerOrderSide.BUY ? shared_1.OrderSide.BUY : shared_1.OrderSide.SELL;
}
function convertIndexerPositionSide(side) {
    return side === shared_1.IndexerPositionSide.LONG
        ? accounts_1.PositionSide.LONG
        : accounts_1.PositionSide.SHORT;
}
function getMarginModeFromSubaccount(subaccountNumber) {
    return subaccountNumber >= shared_2.NUM_PARENT_SUBACCOUNTS
        ? accounts_1.MarginMode.ISOLATED
        : accounts_1.MarginMode.CROSS;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXhlci1jb252ZXJzaW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2luZGV4ZXItY29udmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQWtCQSwwREFjQztBQUVELDBEQVFDO0FBRUQsOERBU0M7QUFFRCw4REFZQztBQUVELDBEQUVDO0FBRUQsZ0VBTUM7QUFFRCxrRUFNQztBQXZGRCwwQ0FhdUI7QUFDdkIsMENBQXVEO0FBQ3ZELGdEQUE0RTtBQUM1RSxpREFBd0Q7QUFFeEQsU0FBZ0IsdUJBQXVCLENBQ3JDLElBQXdDO0lBRXhDLDZDQUE2QztJQUM3QyxRQUFRLElBQUksRUFBRSxDQUFDO1FBQ2IsS0FBSyx3QkFBZSxDQUFDLEtBQUs7WUFDeEIsT0FBTyxrQkFBUyxDQUFDLEtBQUssQ0FBQztRQUN6QixLQUFLLHdCQUFlLENBQUMsVUFBVTtZQUM3QixPQUFPLGtCQUFTLENBQUMsVUFBVSxDQUFDO1FBQzlCLEtBQUssd0JBQWUsQ0FBQyxXQUFXO1lBQzlCLE9BQU8sa0JBQVMsQ0FBQyxXQUFXLENBQUM7UUFDL0I7WUFDRSxPQUFPLGtCQUFTLENBQUMsS0FBSyxDQUFDO0lBQzNCLENBQUM7QUFDSCxDQUFDO0FBRUQsU0FBZ0IsdUJBQXVCLENBQ3JDLFNBQTJCO0lBRTNCLElBQUksU0FBUyxLQUFLLHlCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3pDLE9BQU8sd0JBQWEsQ0FBQyxLQUFLLENBQUM7SUFDN0IsQ0FBQztJQUVELE9BQU8sd0JBQWEsQ0FBQyxLQUFLLENBQUM7QUFDN0IsQ0FBQztBQUVELFNBQWdCLHlCQUF5QixDQUN2QyxNQUEwQjtJQUUxQixJQUFJLE1BQU0sS0FBSywyQkFBa0IsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBQ3JELE9BQU8sSUFBQSxxQ0FBc0IsRUFBQyx3QkFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRCxNQUFNLEtBQUssR0FBRyxNQUFvQyxDQUFDO0lBQ25ELE9BQU8sSUFBQSxxQ0FBc0IsRUFBQyxLQUFLLENBQUMsQ0FBQztBQUN2QyxDQUFDO0FBRUQsU0FBZ0IseUJBQXlCLENBQ3ZDLFdBQStCO0lBRS9CLElBQUksV0FBVyxLQUFLLDJCQUFrQixDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQzNDLE9BQU8seUJBQWdCLENBQUMsR0FBRyxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLFdBQVcsS0FBSywyQkFBa0IsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMzQyxPQUFPLHlCQUFnQixDQUFDLEdBQUcsQ0FBQztJQUM5QixDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsU0FBZ0IsdUJBQXVCLENBQUMsSUFBc0I7SUFDNUQsT0FBTyxJQUFJLEtBQUsseUJBQWdCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxrQkFBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsa0JBQVMsQ0FBQyxJQUFJLENBQUM7QUFDeEUsQ0FBQztBQUVELFNBQWdCLDBCQUEwQixDQUN4QyxJQUF5QjtJQUV6QixPQUFPLElBQUksS0FBSyw0QkFBbUIsQ0FBQyxJQUFJO1FBQ3RDLENBQUMsQ0FBQyx1QkFBWSxDQUFDLElBQUk7UUFDbkIsQ0FBQyxDQUFDLHVCQUFZLENBQUMsS0FBSyxDQUFDO0FBQ3pCLENBQUM7QUFFRCxTQUFnQiwyQkFBMkIsQ0FDekMsZ0JBQXdCO0lBRXhCLE9BQU8sZ0JBQWdCLElBQUksK0JBQXNCO1FBQy9DLENBQUMsQ0FBQyxxQkFBVSxDQUFDLFFBQVE7UUFDckIsQ0FBQyxDQUFDLHFCQUFVLENBQUMsS0FBSyxDQUFDO0FBQ3ZCLENBQUMifQ==