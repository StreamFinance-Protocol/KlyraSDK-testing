"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoundingMode = void 0;
exports.quickRound = quickRound;
exports.numberOfDecimals = numberOfDecimals;
exports.round = round;
exports.roundDecimal = roundDecimal;
var RoundingMode;
(function (RoundingMode) {
    RoundingMode[RoundingMode["TOWARDS_ZERO"] = 0] = "TOWARDS_ZERO";
    RoundingMode[RoundingMode["NEAREST"] = 1] = "NEAREST";
})(RoundingMode || (exports.RoundingMode = RoundingMode = {}));
const cache = {};
function quickRound(number, stepSize) {
    const stepSizeDecimals = numberOfDecimals(stepSize);
    const negative = number < 0.0;
    const multiplier = (Math.abs(number) / stepSize).toFixed(0);
    const absValue = stepSizeDecimals > 0
        ? parseFloat(`${multiplier.padEnd(stepSizeDecimals + 1, "0")}.${multiplier.slice(-stepSizeDecimals)}`)
        : parseFloat(multiplier);
    return absValue * (negative ? -1 : 1);
}
function numberOfDecimals(stepSize) {
    var _a, _b;
    const cached = cache[stepSize];
    if (cached)
        return cached;
    const stepSizeDecimals = (_b = (_a = stepSize.toFixed(0).split(".")[1]) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
    cache[stepSize] = stepSizeDecimals;
    return stepSizeDecimals;
}
function round(number, stepSize, roundingMode = RoundingMode.TOWARDS_ZERO) {
    const roundedDecimal = roundDecimal(number, stepSize, roundingMode);
    return roundedDecimal;
}
function roundDecimal(number, stepSize, roundingMode = RoundingMode.TOWARDS_ZERO) {
    if (stepSize <= 0)
        return number;
    let modifier = 0;
    if (roundingMode !== RoundingMode.TOWARDS_ZERO) {
        modifier = number >= 0 ? 0.5 : -0.5;
    }
    const long = (number / stepSize + modifier).toFixed(0);
    return stepSize * Number(long);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91bmRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9yb3VuZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9BLGdDQVdDO0FBRUQsNENBTUM7QUFDRCxzQkFPQztBQUVELG9DQWNDO0FBbERELElBQVksWUFHWDtBQUhELFdBQVksWUFBWTtJQUN0QiwrREFBWSxDQUFBO0lBQ1oscURBQU8sQ0FBQTtBQUNULENBQUMsRUFIVyxZQUFZLDRCQUFaLFlBQVksUUFHdkI7QUFFRCxNQUFNLEtBQUssR0FBMkIsRUFBRSxDQUFDO0FBRXpDLFNBQWdCLFVBQVUsQ0FBQyxNQUFjLEVBQUUsUUFBZ0I7SUFDekQsTUFBTSxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNwRCxNQUFNLFFBQVEsR0FBRyxNQUFNLEdBQUcsR0FBRyxDQUFDO0lBQzlCLE1BQU0sVUFBVSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUQsTUFBTSxRQUFRLEdBQ1osZ0JBQWdCLEdBQUcsQ0FBQztRQUNsQixDQUFDLENBQUMsVUFBVSxDQUNSLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLElBQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FDekY7UUFDSCxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzdCLE9BQU8sUUFBUSxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEMsQ0FBQztBQUVELFNBQWdCLGdCQUFnQixDQUFDLFFBQWdCOztJQUMvQyxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0IsSUFBSSxNQUFNO1FBQUUsT0FBTyxNQUFNLENBQUM7SUFDMUIsTUFBTSxnQkFBZ0IsR0FBRyxNQUFBLE1BQUEsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLDBDQUFFLE1BQU0sbUNBQUksQ0FBQyxDQUFDO0lBQ3hFLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQztJQUNuQyxPQUFPLGdCQUFnQixDQUFDO0FBQzFCLENBQUM7QUFDRCxTQUFnQixLQUFLLENBQ25CLE1BQWMsRUFDZCxRQUFnQixFQUNoQixlQUE2QixZQUFZLENBQUMsWUFBWTtJQUV0RCxNQUFNLGNBQWMsR0FBRyxZQUFZLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNwRSxPQUFPLGNBQWMsQ0FBQztBQUN4QixDQUFDO0FBRUQsU0FBZ0IsWUFBWSxDQUMxQixNQUFjLEVBQ2QsUUFBZ0IsRUFDaEIsZUFBNkIsWUFBWSxDQUFDLFlBQVk7SUFFdEQsSUFBSSxRQUFRLElBQUksQ0FBQztRQUFFLE9BQU8sTUFBTSxDQUFDO0lBRWpDLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQztJQUNqQixJQUFJLFlBQVksS0FBSyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDL0MsUUFBUSxHQUFHLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDdEMsQ0FBQztJQUVELE1BQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLFFBQVEsR0FBRyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkQsT0FBTyxRQUFRLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLENBQUMifQ==