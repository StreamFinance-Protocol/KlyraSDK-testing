"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const shared_1 = require("@klyra/shared");
const store_1 = require("../core/store");
const account_processor_1 = require("../processors/account/account.processor");
const markets_processor_1 = require("../processors/markets.processor");
const mocks_1 = require("./mocks");
(0, globals_1.describe)("AccountProcessor", () => {
    let store;
    let accountProcessor;
    (0, globals_1.beforeAll)(() => {
        store = new store_1.Store();
        accountProcessor = new account_processor_1.AccountProcessor(store);
        // set market prices
        const marketsProcessor = new markets_processor_1.MarketsProcessor(store);
        marketsProcessor.processSubscribed(mocks_1.MarketsMocks.SUBSCRIBED_MESSAGE);
    });
    (0, globals_1.it)("should be defined", () => {
        (0, globals_1.expect)(account_processor_1.AccountProcessor).toBeDefined();
    });
    (0, globals_1.it)("should process a subaccount", () => {
        var _a, _b, _c;
        accountProcessor.processSubscribed(mocks_1.AccountsMocks.SUBSCRIBED_MESSAGE);
        const subaccounts = store.getState().user.account.subaccounts;
        (0, globals_1.expect)(Object.keys(subaccounts).length).toBe(3);
        (0, globals_1.expect)((_a = subaccounts[0]) === null || _a === void 0 ? void 0 : _a.equity).toBe(415.171879998);
        (0, globals_1.expect)((_b = subaccounts[0]) === null || _b === void 0 ? void 0 : _b.freeCollateral).toBe(314.9069364984);
        (0, globals_1.expect)((_c = subaccounts[0]) === null || _c === void 0 ? void 0 : _c.marginEnabled).toBe(true);
    });
    (0, globals_1.it)("should process a subaccount update", () => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;
        accountProcessor.processSubscribed(mocks_1.AccountsMocks.SUBSCRIBED_MESSAGE);
        const initialSubaccount = store.getState().user.account.subaccounts[0];
        const initialPositions = initialSubaccount === null || initialSubaccount === void 0 ? void 0 : initialSubaccount.positions;
        (0, globals_1.expect)(initialPositions).toBeDefined();
        (0, globals_1.expect)(initialPositions === null || initialPositions === void 0 ? void 0 : initialPositions["RENDER-USD"]).toBeDefined();
        (0, globals_1.expect)(Object.keys(initialPositions !== null && initialPositions !== void 0 ? initialPositions : {}).length).toBe(3);
        accountProcessor.processBatchUpdate(mocks_1.AccountsMocks.BATCH_UPDATE_MESSAGE);
        const subaccounts = store.getState().user.account.subaccounts;
        (0, globals_1.expect)(Object.keys((_b = (_a = subaccounts[0]) === null || _a === void 0 ? void 0 : _a.positions) !== null && _b !== void 0 ? _b : {}).length).toBe(2);
        // expect(subaccounts.get(0)?.freeCollateral).toBeGreaterThan(
        //   initialSubaccount?.freeCollateral || 0
        // );
        // Orders
        (0, globals_1.expect)((_d = (_c = subaccounts[0]) === null || _c === void 0 ? void 0 : _c.orders) === null || _d === void 0 ? void 0 : _d.length).toBe(1);
        (0, globals_1.expect)((_g = (_f = (_e = subaccounts[0]) === null || _e === void 0 ? void 0 : _e.orders) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.marketId).toBe("RENDER-USD");
        (0, globals_1.expect)((_k = (_j = (_h = subaccounts[0]) === null || _h === void 0 ? void 0 : _h.orders) === null || _j === void 0 ? void 0 : _j[0]) === null || _k === void 0 ? void 0 : _k.timeInForce).toBe(shared_1.OrderTimeInForce.IOC);
        // Fills
        (0, globals_1.expect)((_m = (_l = subaccounts[0]) === null || _l === void 0 ? void 0 : _l.fills) === null || _m === void 0 ? void 0 : _m.length).toBe(1);
        (0, globals_1.expect)((_q = (_p = (_o = subaccounts[0]) === null || _o === void 0 ? void 0 : _o.fills) === null || _p === void 0 ? void 0 : _p[0]) === null || _q === void 0 ? void 0 : _q.marketId).toBe("RENDER-USD"); // 65 is the clobPairId for RENDER-USD
        (0, globals_1.expect)((_t = (_s = (_r = subaccounts[0]) === null || _r === void 0 ? void 0 : _r.fills) === null || _s === void 0 ? void 0 : _s[0]) === null || _t === void 0 ? void 0 : _t.size).toBe(2); // 65 is the clobPairId for RENDER-USD
        // Asset Positions
        (0, globals_1.expect)((_v = (_u = subaccounts[0]) === null || _u === void 0 ? void 0 : _u.assetPositions) === null || _v === void 0 ? void 0 : _v.length).toBe(1);
        (0, globals_1.expect)((_y = (_x = (_w = subaccounts[0]) === null || _w === void 0 ? void 0 : _w.assetPositions) === null || _x === void 0 ? void 0 : _x[0]) === null || _y === void 0 ? void 0 : _y.assetId).toBe("0");
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1wcm9jZXNzb3IudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9fX3Rlc3RzX18vYWNjb3VudC1wcm9jZXNzb3IudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJDQUFnRTtBQUNoRSwwQ0FBaUQ7QUFDakQseUNBQXNDO0FBQ3RDLCtFQUEyRTtBQUMzRSx1RUFBbUU7QUFDbkUsbUNBQXNEO0FBRXRELElBQUEsa0JBQVEsRUFBQyxrQkFBa0IsRUFBRSxHQUFHLEVBQUU7SUFDaEMsSUFBSSxLQUFZLENBQUM7SUFDakIsSUFBSSxnQkFBa0MsQ0FBQztJQUV2QyxJQUFBLG1CQUFTLEVBQUMsR0FBRyxFQUFFO1FBQ2IsS0FBSyxHQUFHLElBQUksYUFBSyxFQUFFLENBQUM7UUFDcEIsZ0JBQWdCLEdBQUcsSUFBSSxvQ0FBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUUvQyxvQkFBb0I7UUFDcEIsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLG9DQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JELGdCQUFnQixDQUFDLGlCQUFpQixDQUFDLG9CQUFZLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUN0RSxDQUFDLENBQUMsQ0FBQztJQUVILElBQUEsWUFBRSxFQUFDLG1CQUFtQixFQUFFLEdBQUcsRUFBRTtRQUMzQixJQUFBLGdCQUFNLEVBQUMsb0NBQWdCLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN6QyxDQUFDLENBQUMsQ0FBQztJQUVILElBQUEsWUFBRSxFQUFDLDZCQUE2QixFQUFFLEdBQUcsRUFBRTs7UUFDckMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMscUJBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRXJFLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztRQUM5RCxJQUFBLGdCQUFNLEVBQUMsTUFB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