"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateManager = void 0;
const message_processor_1 = require("../processors/message.processor");
const form_processor_factory_1 = require("../processors/forms/form-processor.factory");
const store_1 = require("./store");
class StateManager {
    constructor(config) {
        this.handleMessage = (message) => {
            this.messageProcessor.process(message);
        };
        this.store = new store_1.Store({
            currentMarketTicker: config.defaultMarketTicker,
        });
        this.messageProcessor = new message_processor_1.MessageProcessor(this.store);
        this.formProcessorFactory = new form_processor_factory_1.FormProcessorFactory(this.store);
    }
    setCurrentMarketTicker(marketId) {
        this.store.setState({
            currentMarketTicker: marketId,
        });
    }
    subscribeToState(listener) {
        return this.store.subscribe(listener);
    }
    getState() {
        return this.store.getState();
    }
    formInput(formType, fieldName, value) {
        const formProcessor = this.formProcessorFactory.getProcessor(formType);
        formProcessor.processInput(fieldName, value);
    }
    setAddress(address) {
        const current = this.getState().user;
        this.store.setState({
            user: {
                ...current,
                address,
            },
        });
    }
    setSubaccountNumber(subaccountNumber) {
        const current = this.getState().user;
        this.store.setState({
            user: { ...current, subaccountNumber },
        });
    }
    setWalletInfo(localWallet) {
        const current = this.getState().user;
        this.store.setState({
            user: {
                ...current,
                wallet: localWallet,
            },
        });
    }
}
exports.StateManager = StateManager;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUtbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3JlL3N0YXRlLW1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsdUVBQW1FO0FBQ25FLHVGQUFrRjtBQUdsRixtQ0FBZ0M7QUFFaEMsTUFBYSxZQUFZO0lBS3ZCLFlBQVksTUFBMEI7UUFjL0Isa0JBQWEsR0FBRyxDQUFDLE9BQWtDLEVBQVEsRUFBRTtZQUNsRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3pDLENBQUMsQ0FBQztRQWZBLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxhQUFLLENBQUM7WUFDckIsbUJBQW1CLEVBQUUsTUFBTSxDQUFDLG1CQUFtQjtTQUNoRCxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxvQ0FBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksNkNBQW9CLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFFTSxzQkFBc0IsQ0FBQyxRQUFnQjtRQUM1QyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUNsQixtQkFBbUIsRUFBRSxRQUFRO1NBQzlCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFNTSxnQkFBZ0IsQ0FBQyxRQUE2QjtRQUNuRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFTSxTQUFTLENBQ2QsUUFBa0IsRUFDbEIsU0FBaUIsRUFDakIsS0FBYztRQUVkLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdkUsYUFBYSxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVNLFVBQVUsQ0FBQyxPQUFlO1FBQy9CLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFFckMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDbEIsSUFBSSxFQUFFO2dCQUNKLEdBQUcsT0FBTztnQkFDVixPQUFPO2FBQ1I7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sbUJBQW1CLENBQUMsZ0JBQXdCO1FBQ2pELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFFckMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDbEIsSUFBSSxFQUFFLEVBQUUsR0FBRyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUU7U0FDdkMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLGFBQWEsQ0FBQyxXQUF3QjtRQUMzQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsSUFBSSxDQUFDO1FBRXJDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQ2xCLElBQUksRUFBRTtnQkFDSixHQUFHLE9BQU87Z0JBQ1YsTUFBTSxFQUFFLFdBQVc7YUFDcEI7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFyRUQsb0NBcUVDIn0=