import { type IndexerOrderbookBatchUpdateMessage, type IndexerOrderbookSubscribedMessage } from "@klyra/shared";
import { type Store } from "../core/store";
import { type BaseProcessor } from "./base.processor";
export declare class OrderbooksProcessor implements BaseProcessor {
    private store;
    constructor(store: Store);
    processSubscribed(msg: IndexerOrderbookSubscribedMessage): void;
    processBatchUpdate(msg: IndexerOrderbookBatchUpdateMessage): void;
    private processEntry;
    /**
     * Consolidates the orderbook by removing crossed orders and recalculates orderbook metrics.
     *
     * @param asks - The existing market orderbook asks.
     * @param bids - The existing market orderbook bids.
     * @returns The consolidated MarketOrderbook with updated metrics or null if consolidation fails.
     */
    private consolidate;
    private calculate;
    private updateOrderbookSide;
}
