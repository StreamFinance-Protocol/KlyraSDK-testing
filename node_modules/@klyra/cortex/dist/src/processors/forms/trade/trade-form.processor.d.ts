import { type Store } from "../../../core/store";
import { type Subaccount } from "../../../types/accounts";
import { type TradeFormInputs, type TradeFormInputsKeys } from "../../../types/forms";
import { BaseFormProcessor } from "../base-form.processor";
export declare class TradeFormProcessor extends BaseFormProcessor {
    private optionsProcessor;
    private summaryProcessor;
    constructor(store: Store);
    resetForm(): void;
    processInput(fieldName: TradeFormInputsKeys, value: unknown): void;
    protected validateInputs(inputs: TradeFormInputs): {
        isValid: boolean;
        errors: object[];
    };
    protected calculateFormResult(newInputs: TradeFormInputs, fieldName: TradeFormInputsKeys, subaccount: Subaccount): TradeFormInputs | null;
    private calculateMarketOrder;
    private calculateMarketOrderFromLeverage;
    private calculateMarketOrderFromBaseSize;
    private calculateMarketOrderFromQuoteSize;
    private calculateLimitOrder;
    private calculateSizeFromLeverageAndLimitPrice;
    private updateForm;
    private isShortTermOrder;
    private getSubaccountNumberForIsolatedMarket;
}
