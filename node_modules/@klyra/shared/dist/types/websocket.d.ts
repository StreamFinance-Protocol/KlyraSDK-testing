export interface WebSocketConfig {
    url: string;
    reconnectInterval?: number;
}
export interface WebSocketMessageInfo {
    type: MessageType;
    channel: MessageChannel;
    connection_id: string;
    version?: string;
    message_id: number;
    id?: string;
}
export type WebSocketMessage<T> = WebSocketMessageInfo & {
    contents: T;
};
export type WebSocketSubscriptionMessage = WebSocketMessage<unknown> & {
    batched?: boolean;
};
export declare enum MessageChannel {
    MARKETS = "v4_markets",
    TRADES = "v4_trades",
    ORDERBOOK = "v4_orderbook",
    CANDLES = "v4_candles",
    PARENT_SUBACCOUNTS = "v4_parent_subaccounts"
}
export declare enum MessageType {
    CONNECTED = "connected",
    SUBSCRIBE = "subscribe",
    SUBSCRIBED = "subscribed",
    UNSUBSCRIBED = "unsubscribed",
    CHANNEL_DATA = "channel_data",
    CHANNEL_BATCH_DATA = "channel_batch_data"
}
