export type EventCallback<T extends unknown[] = unknown[]> = (...args: T) => void;
export declare class EventEmitter<T extends unknown[] = unknown[]> {
    private events;
    on(event: string, listener: EventCallback<T>): void;
    off(event: string, listenerToRemove: EventCallback<T>): void;
    emit(event: string, ...args: T): void;
    once(event: string, listener: EventCallback<T>): void;
    removeAllListeners(event?: string): void;
    listenerCount(event: string): number;
    rawListeners(event: string): EventCallback<T>[];
}
